{"version":3,"file":"index.min.js","sources":["../unpack.js","../pack.js","../iterators.js"],"sourcesContent":["var decoder\ntry {\n\tdecoder = new TextDecoder()\n} catch(error) {}\nvar src\nvar srcEnd\nvar position = 0\nvar alreadySet\nconst EMPTY_ARRAY = []\nvar strings = EMPTY_ARRAY\nvar stringPosition = 0\nvar currentUnpackr = {}\nvar currentStructures\nvar srcString\nvar srcStringStart = 0\nvar srcStringEnd = 0\nvar bundledStrings\nvar referenceMap\nvar currentExtensions = []\nvar dataView\nvar defaultOptions = {\n\tuseRecords: false,\n\tmapsAsObjects: true\n}\nexport class C1Type {}\nexport const C1 = new C1Type()\nC1.name = 'MessagePack 0xC1'\nvar sequentialMode = false\nvar inlineObjectReadThreshold = 2\nvar readStruct, onLoadedStructures, onSaveState\ntry {\n\tnew Function('')\n} catch(error) {\n\t// if eval variants are not supported, do not create inline object readers ever\n\tinlineObjectReadThreshold = Infinity\n}\n\nexport class Unpackr {\n\tconstructor(options) {\n\t\tif (options) {\n\t\t\tif (options.useRecords === false && options.mapsAsObjects === undefined)\n\t\t\t\toptions.mapsAsObjects = true\n\t\t\tif (options.sequential && options.trusted !== false) {\n\t\t\t\toptions.trusted = true;\n\t\t\t\tif (!options.structures && options.useRecords != false) {\n\t\t\t\t\toptions.structures = []\n\t\t\t\t\tif (!options.maxSharedStructures)\n\t\t\t\t\t\toptions.maxSharedStructures = 0\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (options.structures)\n\t\t\t\toptions.structures.sharedLength = options.structures.length\n\t\t\telse if (options.getStructures) {\n\t\t\t\t(options.structures = []).uninitialized = true // this is what we use to denote an uninitialized structures\n\t\t\t\toptions.structures.sharedLength = 0\n\t\t\t}\n\t\t}\n\t\tObject.assign(this, options)\n\t}\n\tunpack(source, options) {\n\t\tif (src) {\n\t\t\t// re-entrant execution, save the state and restore it after we do this unpack\n\t\t\treturn saveState(() => {\n\t\t\t\tclearSource()\n\t\t\t\treturn this ? this.unpack(source, options) : Unpackr.prototype.unpack.call(defaultOptions, source, options)\n\t\t\t})\n\t\t}\n\t\tif (typeof options === 'object') {\n\t\t\tsrcEnd = options.end || source.length\n\t\t\tposition = options.start || 0\n\t\t} else {\n\t\t\tposition = 0\n\t\t\tsrcEnd = options > -1 ? options : source.length\n\t\t}\n\t\tstringPosition = 0\n\t\tsrcStringEnd = 0\n\t\tsrcString = null\n\t\tstrings = EMPTY_ARRAY\n\t\tbundledStrings = null\n\t\tsrc = source\n\t\t// this provides cached access to the data view for a buffer if it is getting reused, which is a recommend\n\t\t// technique for getting data from a database where it can be copied into an existing buffer instead of creating\n\t\t// new ones\n\t\ttry {\n\t\t\tdataView = source.dataView || (source.dataView = new DataView(source.buffer, source.byteOffset, source.byteLength))\n\t\t} catch(error) {\n\t\t\t// if it doesn't have a buffer, maybe it is the wrong type of object\n\t\t\tsrc = null\n\t\t\tif (source instanceof Uint8Array)\n\t\t\t\tthrow error\n\t\t\tthrow new Error('Source must be a Uint8Array or Buffer but was a ' + ((source && typeof source == 'object') ? source.constructor.name : typeof source))\n\t\t}\n\t\tif (this instanceof Unpackr) {\n\t\t\tcurrentUnpackr = this\n\t\t\tif (this.structures) {\n\t\t\t\tcurrentStructures = this.structures\n\t\t\t\treturn checkedRead(options)\n\t\t\t} else if (!currentStructures || currentStructures.length > 0) {\n\t\t\t\tcurrentStructures = []\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentUnpackr = defaultOptions\n\t\t\tif (!currentStructures || currentStructures.length > 0)\n\t\t\t\tcurrentStructures = []\n\t\t}\n\t\treturn checkedRead(options)\n\t}\n\tunpackMultiple(source, forEach) {\n\t\tlet values, lastPosition = 0\n\t\ttry {\n\t\t\tsequentialMode = true\n\t\t\tlet size = source.length\n\t\t\tlet value = this ? this.unpack(source, size) : defaultUnpackr.unpack(source, size)\n\t\t\tif (forEach) {\n\t\t\t\tforEach(value)\n\t\t\t\twhile(position < size) {\n\t\t\t\t\tlastPosition = position\n\t\t\t\t\tif (forEach(checkedRead()) === false) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalues = [ value ]\n\t\t\t\twhile(position < size) {\n\t\t\t\t\tlastPosition = position\n\t\t\t\t\tvalues.push(checkedRead())\n\t\t\t\t}\n\t\t\t\treturn values\n\t\t\t}\n\t\t} catch(error) {\n\t\t\terror.lastPosition = lastPosition\n\t\t\terror.values = values\n\t\t\tthrow error\n\t\t} finally {\n\t\t\tsequentialMode = false\n\t\t\tclearSource()\n\t\t}\n\t}\n\t_mergeStructures(loadedStructures, existingStructures) {\n\t\tif (onLoadedStructures)\n\t\t\tloadedStructures = onLoadedStructures.call(this, loadedStructures);\n\t\tloadedStructures = loadedStructures || []\n\t\tif (Object.isFrozen(loadedStructures))\n\t\t\tloadedStructures = loadedStructures.map(structure => structure.slice(0))\n\t\tfor (let i = 0, l = loadedStructures.length; i < l; i++) {\n\t\t\tlet structure = loadedStructures[i]\n\t\t\tif (structure) {\n\t\t\t\tstructure.isShared = true\n\t\t\t\tif (i >= 32)\n\t\t\t\t\tstructure.highByte = (i - 32) >> 5\n\t\t\t}\n\t\t}\n\t\tloadedStructures.sharedLength = loadedStructures.length\n\t\tfor (let id in existingStructures || []) {\n\t\t\tif (id >= 0) {\n\t\t\t\tlet structure = loadedStructures[id]\n\t\t\t\tlet existing = existingStructures[id]\n\t\t\t\tif (existing) {\n\t\t\t\t\tif (structure)\n\t\t\t\t\t\t(loadedStructures.restoreStructures || (loadedStructures.restoreStructures = []))[id] = structure\n\t\t\t\t\tloadedStructures[id] = existing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.structures = loadedStructures\n\t}\n\tdecode(source, end) {\n\t\treturn this.unpack(source, end)\n\t}\n}\nexport function getPosition() {\n\treturn position\n}\nexport function checkedRead(options) {\n\ttry {\n\t\tif (!currentUnpackr.trusted && !sequentialMode) {\n\t\t\tlet sharedLength = currentStructures.sharedLength || 0\n\t\t\tif (sharedLength < currentStructures.length)\n\t\t\t\tcurrentStructures.length = sharedLength\n\t\t}\n\t\tlet result\n\t\tif (currentUnpackr.randomAccessStructure && src[position] < 0x40 && src[position] >= 0x20 && readStruct) {\n\t\t\tresult = readStruct(src, position, srcEnd, currentUnpackr)\n\t\t\tsrc = null // dispose of this so that recursive unpack calls don't save state\n\t\t\tif (!(options && options.lazy) && result)\n\t\t\t\tresult = result.toJSON()\n\t\t\tposition = srcEnd\n\t\t} else\n\t\t\tresult = read()\n\t\tif (bundledStrings) // bundled strings to skip past\n\t\t\tposition = bundledStrings.postBundlePosition\n\n\t\tif (position == srcEnd) {\n\t\t\t// finished reading this source, cleanup references\n\t\t\tif (currentStructures && currentStructures.restoreStructures)\n\t\t\t\trestoreStructures()\n\t\t\tcurrentStructures = null\n\t\t\tsrc = null\n\t\t\tif (referenceMap)\n\t\t\t\treferenceMap = null\n\t\t} else if (position > srcEnd) {\n\t\t\t// over read\n\t\t\tthrow new Error('Unexpected end of MessagePack data')\n\t\t} else if (!sequentialMode) {\n\t\t\tthrow new Error('Data read, but end of buffer not reached ' + JSON.stringify(result).slice(0, 100))\n\t\t}\n\t\t// else more to read, but we are reading sequentially, so don't clear source yet\n\t\treturn result\n\t} catch(error) {\n\t\tif (currentStructures && currentStructures.restoreStructures)\n\t\t\trestoreStructures()\n\t\tclearSource()\n\t\tif (error instanceof RangeError || error.message.startsWith('Unexpected end of buffer') || position > srcEnd) {\n\t\t\terror.incomplete = true\n\t\t}\n\t\tthrow error\n\t}\n}\n\nfunction restoreStructures() {\n\tfor (let id in currentStructures.restoreStructures) {\n\t\tcurrentStructures[id] = currentStructures.restoreStructures[id]\n\t}\n\tcurrentStructures.restoreStructures = null\n}\n\nexport function read() {\n\tlet token = src[position++]\n\tif (token < 0xa0) {\n\t\tif (token < 0x80) {\n\t\t\tif (token < 0x40)\n\t\t\t\treturn token\n\t\t\telse {\n\t\t\t\tlet structure = currentStructures[token & 0x3f] ||\n\t\t\t\t\tcurrentUnpackr.getStructures && loadStructures()[token & 0x3f]\n\t\t\t\tif (structure) {\n\t\t\t\t\tif (!structure.read) {\n\t\t\t\t\t\tstructure.read = createStructureReader(structure, token & 0x3f)\n\t\t\t\t\t}\n\t\t\t\t\treturn structure.read()\n\t\t\t\t} else\n\t\t\t\t\treturn token\n\t\t\t}\n\t\t} else if (token < 0x90) {\n\t\t\t// map\n\t\t\ttoken -= 0x80\n\t\t\tif (currentUnpackr.mapsAsObjects) {\n\t\t\t\tlet object = {}\n\t\t\t\tfor (let i = 0; i < token; i++) {\n\t\t\t\t\tlet key = readKey()\n\t\t\t\t\tif (key === '__proto__')\n\t\t\t\t\t\tkey = '__proto_'\n\t\t\t\t\tobject[key] = read()\n\t\t\t\t}\n\t\t\t\treturn object\n\t\t\t} else {\n\t\t\t\tlet map = new Map()\n\t\t\t\tfor (let i = 0; i < token; i++) {\n\t\t\t\t\tmap.set(read(), read())\n\t\t\t\t}\n\t\t\t\treturn map\n\t\t\t}\n\t\t} else {\n\t\t\ttoken -= 0x90\n\t\t\tlet array = new Array(token)\n\t\t\tfor (let i = 0; i < token; i++) {\n\t\t\t\tarray[i] = read()\n\t\t\t}\n\t\t\tif (currentUnpackr.freezeData)\n\t\t\t\treturn Object.freeze(array)\n\t\t\treturn array\n\t\t}\n\t} else if (token < 0xc0) {\n\t\t// fixstr\n\t\tlet length = token - 0xa0\n\t\tif (srcStringEnd >= position) {\n\t\t\treturn srcString.slice(position - srcStringStart, (position += length) - srcStringStart)\n\t\t}\n\t\tif (srcStringEnd == 0 && srcEnd < 140) {\n\t\t\t// for small blocks, avoiding the overhead of the extract call is helpful\n\t\t\tlet string = length < 16 ? shortStringInJS(length) : longStringInJS(length)\n\t\t\tif (string != null)\n\t\t\t\treturn string\n\t\t}\n\t\treturn readFixedString(length)\n\t} else {\n\t\tlet value\n\t\tswitch (token) {\n\t\t\tcase 0xc0: return null\n\t\t\tcase 0xc1:\n\t\t\t\tif (bundledStrings) {\n\t\t\t\t\tvalue = read() // followed by the length of the string in characters (not bytes!)\n\t\t\t\t\tif (value > 0)\n\t\t\t\t\t\treturn bundledStrings[1].slice(bundledStrings.position1, bundledStrings.position1 += value)\n\t\t\t\t\telse\n\t\t\t\t\t\treturn bundledStrings[0].slice(bundledStrings.position0, bundledStrings.position0 -= value)\n\t\t\t\t}\n\t\t\t\treturn C1; // \"never-used\", return special object to denote that\n\t\t\tcase 0xc2: return false\n\t\t\tcase 0xc3: return true\n\t\t\tcase 0xc4:\n\t\t\t\t// bin 8\n\t\t\t\tvalue = src[position++]\n\t\t\t\tif (value === undefined)\n\t\t\t\t\tthrow new Error('Unexpected end of buffer')\n\t\t\t\treturn readBin(value)\n\t\t\tcase 0xc5:\n\t\t\t\t// bin 16\n\t\t\t\tvalue = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\treturn readBin(value)\n\t\t\tcase 0xc6:\n\t\t\t\t// bin 32\n\t\t\t\tvalue = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\treturn readBin(value)\n\t\t\tcase 0xc7:\n\t\t\t\t// ext 8\n\t\t\t\treturn readExt(src[position++])\n\t\t\tcase 0xc8:\n\t\t\t\t// ext 16\n\t\t\t\tvalue = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\treturn readExt(value)\n\t\t\tcase 0xc9:\n\t\t\t\t// ext 32\n\t\t\t\tvalue = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\treturn readExt(value)\n\t\t\tcase 0xca:\n\t\t\t\tvalue = dataView.getFloat32(position)\n\t\t\t\tif (currentUnpackr.useFloat32 > 2) {\n\t\t\t\t\t// this does rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n\t\t\t\t\tlet multiplier = mult10[((src[position] & 0x7f) << 1) | (src[position + 1] >> 7)]\n\t\t\t\t\tposition += 4\n\t\t\t\t\treturn ((multiplier * value + (value > 0 ? 0.5 : -0.5)) >> 0) / multiplier\n\t\t\t\t}\n\t\t\t\tposition += 4\n\t\t\t\treturn value\n\t\t\tcase 0xcb:\n\t\t\t\tvalue = dataView.getFloat64(position)\n\t\t\t\tposition += 8\n\t\t\t\treturn value\n\t\t\t// uint handlers\n\t\t\tcase 0xcc:\n\t\t\t\treturn src[position++]\n\t\t\tcase 0xcd:\n\t\t\t\tvalue = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\treturn value\n\t\t\tcase 0xce:\n\t\t\t\tvalue = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\treturn value\n\t\t\tcase 0xcf:\n\t\t\t\tif (currentUnpackr.int64AsNumber) {\n\t\t\t\t\tvalue = dataView.getUint32(position) * 0x100000000\n\t\t\t\t\tvalue += dataView.getUint32(position + 4)\n\t\t\t\t} else\n\t\t\t\t\tvalue = dataView.getBigUint64(position)\n\t\t\t\tposition += 8\n\t\t\t\treturn value\n\n\t\t\t// int handlers\n\t\t\tcase 0xd0:\n\t\t\t\treturn dataView.getInt8(position++)\n\t\t\tcase 0xd1:\n\t\t\t\tvalue = dataView.getInt16(position)\n\t\t\t\tposition += 2\n\t\t\t\treturn value\n\t\t\tcase 0xd2:\n\t\t\t\tvalue = dataView.getInt32(position)\n\t\t\t\tposition += 4\n\t\t\t\treturn value\n\t\t\tcase 0xd3:\n\t\t\t\tif (currentUnpackr.int64AsNumber) {\n\t\t\t\t\tvalue = dataView.getInt32(position) * 0x100000000\n\t\t\t\t\tvalue += dataView.getUint32(position + 4)\n\t\t\t\t} else\n\t\t\t\t\tvalue = dataView.getBigInt64(position)\n\t\t\t\tposition += 8\n\t\t\t\treturn value\n\n\t\t\tcase 0xd4:\n\t\t\t\t// fixext 1\n\t\t\t\tvalue = src[position++]\n\t\t\t\tif (value == 0x72) {\n\t\t\t\t\treturn recordDefinition(src[position++] & 0x3f)\n\t\t\t\t} else {\n\t\t\t\t\tlet extension = currentExtensions[value]\n\t\t\t\t\tif (extension) {\n\t\t\t\t\t\tif (extension.read) {\n\t\t\t\t\t\t\tposition++ // skip filler byte\n\t\t\t\t\t\t\treturn extension.read(read())\n\t\t\t\t\t\t} else if (extension.noBuffer) {\n\t\t\t\t\t\t\tposition++ // skip filler byte\n\t\t\t\t\t\t\treturn extension()\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\treturn extension(src.subarray(position, ++position))\n\t\t\t\t\t} else\n\t\t\t\t\t\tthrow new Error('Unknown extension ' + value)\n\t\t\t\t}\n\t\t\tcase 0xd5:\n\t\t\t\t// fixext 2\n\t\t\t\tvalue = src[position]\n\t\t\t\tif (value == 0x72) {\n\t\t\t\t\tposition++\n\t\t\t\t\treturn recordDefinition(src[position++] & 0x3f, src[position++])\n\t\t\t\t} else\n\t\t\t\t\treturn readExt(2)\n\t\t\tcase 0xd6:\n\t\t\t\t// fixext 4\n\t\t\t\treturn readExt(4)\n\t\t\tcase 0xd7:\n\t\t\t\t// fixext 8\n\t\t\t\treturn readExt(8)\n\t\t\tcase 0xd8:\n\t\t\t\t// fixext 16\n\t\t\t\treturn readExt(16)\n\t\t\tcase 0xd9:\n\t\t\t// str 8\n\t\t\t\tvalue = src[position++]\n\t\t\t\tif (srcStringEnd >= position) {\n\t\t\t\t\treturn srcString.slice(position - srcStringStart, (position += value) - srcStringStart)\n\t\t\t\t}\n\t\t\t\treturn readString8(value)\n\t\t\tcase 0xda:\n\t\t\t// str 16\n\t\t\t\tvalue = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\tif (srcStringEnd >= position) {\n\t\t\t\t\treturn srcString.slice(position - srcStringStart, (position += value) - srcStringStart)\n\t\t\t\t}\n\t\t\t\treturn readString16(value)\n\t\t\tcase 0xdb:\n\t\t\t// str 32\n\t\t\t\tvalue = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\tif (srcStringEnd >= position) {\n\t\t\t\t\treturn srcString.slice(position - srcStringStart, (position += value) - srcStringStart)\n\t\t\t\t}\n\t\t\t\treturn readString32(value)\n\t\t\tcase 0xdc:\n\t\t\t// array 16\n\t\t\t\tvalue = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\treturn readArray(value)\n\t\t\tcase 0xdd:\n\t\t\t// array 32\n\t\t\t\tvalue = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\treturn readArray(value)\n\t\t\tcase 0xde:\n\t\t\t// map 16\n\t\t\t\tvalue = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\treturn readMap(value)\n\t\t\tcase 0xdf:\n\t\t\t// map 32\n\t\t\t\tvalue = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\treturn readMap(value)\n\t\t\tdefault: // negative int\n\t\t\t\tif (token >= 0xe0)\n\t\t\t\t\treturn token - 0x100\n\t\t\t\tif (token === undefined) {\n\t\t\t\t\tlet error = new Error('Unexpected end of MessagePack data')\n\t\t\t\t\terror.incomplete = true\n\t\t\t\t\tthrow error\n\t\t\t\t}\n\t\t\t\tthrow new Error('Unknown MessagePack token ' + token)\n\n\t\t}\n\t}\n}\nconst validName = /^[a-zA-Z_$][a-zA-Z\\d_$]*$/\nfunction createStructureReader(structure, firstId) {\n\tfunction readObject() {\n\t\t// This initial function is quick to instantiate, but runs slower. After several iterations pay the cost to build the faster function\n\t\tif (readObject.count++ > inlineObjectReadThreshold) {\n\t\t\tlet readObject = structure.read = (new Function('r', 'return function(){return ' + (currentUnpackr.freezeData ? 'Object.freeze' : '') +\n\t\t\t\t'({' + structure.map(key => key === '__proto__' ? '__proto_:r()' : validName.test(key) ? key + ':r()' : ('[' + JSON.stringify(key) + ']:r()')).join(',') + '})}'))(read)\n\t\t\tif (structure.highByte === 0)\n\t\t\t\tstructure.read = createSecondByteReader(firstId, structure.read)\n\t\t\treturn readObject() // second byte is already read, if there is one so immediately read object\n\t\t}\n\t\tlet object = {}\n\t\tfor (let i = 0, l = structure.length; i < l; i++) {\n\t\t\tlet key = structure[i]\n\t\t\tif (key === '__proto__')\n\t\t\t\tkey = '__proto_'\n\t\t\tobject[key] = read()\n\t\t}\n\t\tif (currentUnpackr.freezeData)\n\t\t\treturn Object.freeze(object);\n\t\treturn object\n\t}\n\treadObject.count = 0\n\tif (structure.highByte === 0) {\n\t\treturn createSecondByteReader(firstId, readObject)\n\t}\n\treturn readObject\n}\n\nconst createSecondByteReader = (firstId, read0) => {\n\treturn function() {\n\t\tlet highByte = src[position++]\n\t\tif (highByte === 0)\n\t\t\treturn read0()\n\t\tlet id = firstId < 32 ? -(firstId + (highByte << 5)) : firstId + (highByte << 5)\n\t\tlet structure = currentStructures[id] || loadStructures()[id]\n\t\tif (!structure) {\n\t\t\tthrow new Error('Record id is not defined for ' + id)\n\t\t}\n\t\tif (!structure.read)\n\t\t\tstructure.read = createStructureReader(structure, firstId)\n\t\treturn structure.read()\n\t}\n}\n\nexport function loadStructures() {\n\tlet loadedStructures = saveState(() => {\n\t\t// save the state in case getStructures modifies our buffer\n\t\tsrc = null\n\t\treturn currentUnpackr.getStructures()\n\t})\n\treturn currentStructures = currentUnpackr._mergeStructures(loadedStructures, currentStructures)\n}\n\nvar readFixedString = readStringJS\nvar readString8 = readStringJS\nvar readString16 = readStringJS\nvar readString32 = readStringJS\nexport let isNativeAccelerationEnabled = false\n\nexport function setExtractor(extractStrings) {\n\tisNativeAccelerationEnabled = true\n\treadFixedString = readString(1)\n\treadString8 = readString(2)\n\treadString16 = readString(3)\n\treadString32 = readString(5)\n\tfunction readString(headerLength) {\n\t\treturn function readString(length) {\n\t\t\tlet string = strings[stringPosition++]\n\t\t\tif (string == null) {\n\t\t\t\tif (bundledStrings)\n\t\t\t\t\treturn readStringJS(length)\n\t\t\t\tlet extraction = extractStrings(position - headerLength, srcEnd, src)\n\t\t\t\tif (typeof extraction == 'string') {\n\t\t\t\t\tstring = extraction\n\t\t\t\t\tstrings = EMPTY_ARRAY\n\t\t\t\t} else {\n\t\t\t\t\tstrings = extraction\n\t\t\t\t\tstringPosition = 1\n\t\t\t\t\tsrcStringEnd = 1 // even if a utf-8 string was decoded, must indicate we are in the midst of extracted strings and can't skip strings\n\t\t\t\t\tstring = strings[0]\n\t\t\t\t\tif (string === undefined)\n\t\t\t\t\t\tthrow new Error('Unexpected end of buffer')\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet srcStringLength = string.length\n\t\t\tif (srcStringLength <= length) {\n\t\t\t\tposition += length\n\t\t\t\treturn string\n\t\t\t}\n\t\t\tsrcString = string\n\t\t\tsrcStringStart = position\n\t\t\tsrcStringEnd = position + srcStringLength\n\t\t\tposition += length\n\t\t\treturn string.slice(0, length) // we know we just want the beginning\n\t\t}\n\t}\n}\nfunction readStringJS(length) {\n\tlet result\n\tif (length < 16) {\n\t\tif (result = shortStringInJS(length))\n\t\t\treturn result\n\t}\n\tif (length > 64 && decoder)\n\t\treturn decoder.decode(src.subarray(position, position += length))\n\tconst end = position + length\n\tconst units = []\n\tresult = ''\n\twhile (position < end) {\n\t\tconst byte1 = src[position++]\n\t\tif ((byte1 & 0x80) === 0) {\n\t\t\t// 1 byte\n\t\t\tunits.push(byte1)\n\t\t} else if ((byte1 & 0xe0) === 0xc0) {\n\t\t\t// 2 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tunits.push(((byte1 & 0x1f) << 6) | byte2)\n\t\t} else if ((byte1 & 0xf0) === 0xe0) {\n\t\t\t// 3 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tconst byte3 = src[position++] & 0x3f\n\t\t\tunits.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3)\n\t\t} else if ((byte1 & 0xf8) === 0xf0) {\n\t\t\t// 4 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tconst byte3 = src[position++] & 0x3f\n\t\t\tconst byte4 = src[position++] & 0x3f\n\t\t\tlet unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4\n\t\t\tif (unit > 0xffff) {\n\t\t\t\tunit -= 0x10000\n\t\t\t\tunits.push(((unit >>> 10) & 0x3ff) | 0xd800)\n\t\t\t\tunit = 0xdc00 | (unit & 0x3ff)\n\t\t\t}\n\t\t\tunits.push(unit)\n\t\t} else {\n\t\t\tunits.push(byte1)\n\t\t}\n\n\t\tif (units.length >= 0x1000) {\n\t\t\tresult += fromCharCode.apply(String, units)\n\t\t\tunits.length = 0\n\t\t}\n\t}\n\n\tif (units.length > 0) {\n\t\tresult += fromCharCode.apply(String, units)\n\t}\n\n\treturn result\n}\nexport function readString(source, start, length) {\n\tlet existingSrc = src;\n\tsrc = source;\n\tposition = start;\n\ttry {\n\t\treturn readStringJS(length);\n\t} finally {\n\t\tsrc = existingSrc;\n\t}\n}\n\nfunction readArray(length) {\n\tlet array = new Array(length)\n\tfor (let i = 0; i < length; i++) {\n\t\tarray[i] = read()\n\t}\n\tif (currentUnpackr.freezeData)\n\t\treturn Object.freeze(array)\n\treturn array\n}\n\nfunction readMap(length) {\n\tif (currentUnpackr.mapsAsObjects) {\n\t\tlet object = {}\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tlet key = readKey()\n\t\t\tif (key === '__proto__')\n\t\t\t\tkey = '__proto_';\n\t\t\tobject[key] = read()\n\t\t}\n\t\treturn object\n\t} else {\n\t\tlet map = new Map()\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tmap.set(read(), read())\n\t\t}\n\t\treturn map\n\t}\n}\n\nvar fromCharCode = String.fromCharCode\nfunction longStringInJS(length) {\n\tlet start = position\n\tlet bytes = new Array(length)\n\tfor (let i = 0; i < length; i++) {\n\t\tconst byte = src[position++];\n\t\tif ((byte & 0x80) > 0) {\n\t\t\t\tposition = start\n\t\t\t\treturn\n\t\t\t}\n\t\t\tbytes[i] = byte\n\t\t}\n\t\treturn fromCharCode.apply(String, bytes)\n}\nfunction shortStringInJS(length) {\n\tif (length < 4) {\n\t\tif (length < 2) {\n\t\t\tif (length === 0)\n\t\t\t\treturn ''\n\t\t\telse {\n\t\t\t\tlet a = src[position++]\n\t\t\t\tif ((a & 0x80) > 1) {\n\t\t\t\t\tposition -= 1\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a)\n\t\t\t}\n\t\t} else {\n\t\t\tlet a = src[position++]\n\t\t\tlet b = src[position++]\n\t\t\tif ((a & 0x80) > 0 || (b & 0x80) > 0) {\n\t\t\t\tposition -= 2\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 3)\n\t\t\t\treturn fromCharCode(a, b)\n\t\t\tlet c = src[position++]\n\t\t\tif ((c & 0x80) > 0) {\n\t\t\t\tposition -= 3\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn fromCharCode(a, b, c)\n\t\t}\n\t} else {\n\t\tlet a = src[position++]\n\t\tlet b = src[position++]\n\t\tlet c = src[position++]\n\t\tlet d = src[position++]\n\t\tif ((a & 0x80) > 0 || (b & 0x80) > 0 || (c & 0x80) > 0 || (d & 0x80) > 0) {\n\t\t\tposition -= 4\n\t\t\treturn\n\t\t}\n\t\tif (length < 6) {\n\t\t\tif (length === 4)\n\t\t\t\treturn fromCharCode(a, b, c, d)\n\t\t\telse {\n\t\t\t\tlet e = src[position++]\n\t\t\t\tif ((e & 0x80) > 0) {\n\t\t\t\t\tposition -= 5\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a, b, c, d, e)\n\t\t\t}\n\t\t} else if (length < 8) {\n\t\t\tlet e = src[position++]\n\t\t\tlet f = src[position++]\n\t\t\tif ((e & 0x80) > 0 || (f & 0x80) > 0) {\n\t\t\t\tposition -= 6\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 7)\n\t\t\t\treturn fromCharCode(a, b, c, d, e, f)\n\t\t\tlet g = src[position++]\n\t\t\tif ((g & 0x80) > 0) {\n\t\t\t\tposition -= 7\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn fromCharCode(a, b, c, d, e, f, g)\n\t\t} else {\n\t\t\tlet e = src[position++]\n\t\t\tlet f = src[position++]\n\t\t\tlet g = src[position++]\n\t\t\tlet h = src[position++]\n\t\t\tif ((e & 0x80) > 0 || (f & 0x80) > 0 || (g & 0x80) > 0 || (h & 0x80) > 0) {\n\t\t\t\tposition -= 8\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 10) {\n\t\t\t\tif (length === 8)\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h)\n\t\t\t\telse {\n\t\t\t\t\tlet i = src[position++]\n\t\t\t\t\tif ((i & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 9\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i)\n\t\t\t\t}\n\t\t\t} else if (length < 12) {\n\t\t\t\tlet i = src[position++]\n\t\t\t\tlet j = src[position++]\n\t\t\t\tif ((i & 0x80) > 0 || (j & 0x80) > 0) {\n\t\t\t\t\tposition -= 10\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (length < 11)\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j)\n\t\t\t\tlet k = src[position++]\n\t\t\t\tif ((k & 0x80) > 0) {\n\t\t\t\t\tposition -= 11\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k)\n\t\t\t} else {\n\t\t\t\tlet i = src[position++]\n\t\t\t\tlet j = src[position++]\n\t\t\t\tlet k = src[position++]\n\t\t\t\tlet l = src[position++]\n\t\t\t\tif ((i & 0x80) > 0 || (j & 0x80) > 0 || (k & 0x80) > 0 || (l & 0x80) > 0) {\n\t\t\t\t\tposition -= 12\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (length < 14) {\n\t\t\t\t\tif (length === 12)\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l)\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet m = src[position++]\n\t\t\t\t\t\tif ((m & 0x80) > 0) {\n\t\t\t\t\t\t\tposition -= 13\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet m = src[position++]\n\t\t\t\t\tlet n = src[position++]\n\t\t\t\t\tif ((m & 0x80) > 0 || (n & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 14\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif (length < 15)\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n)\n\t\t\t\t\tlet o = src[position++]\n\t\t\t\t\tif ((o & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 15\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction readOnlyJSString() {\n\tlet token = src[position++]\n\tlet length\n\tif (token < 0xc0) {\n\t\t// fixstr\n\t\tlength = token - 0xa0\n\t} else {\n\t\tswitch(token) {\n\t\t\tcase 0xd9:\n\t\t\t// str 8\n\t\t\t\tlength = src[position++]\n\t\t\t\tbreak\n\t\t\tcase 0xda:\n\t\t\t// str 16\n\t\t\t\tlength = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\tbreak\n\t\t\tcase 0xdb:\n\t\t\t// str 32\n\t\t\t\tlength = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Expected string')\n\t\t}\n\t}\n\treturn readStringJS(length)\n}\n\n\nfunction readBin(length) {\n\treturn currentUnpackr.copyBuffers ?\n\t\t// specifically use the copying slice (not the node one)\n\t\tUint8Array.prototype.slice.call(src, position, position += length) :\n\t\tsrc.subarray(position, position += length)\n}\nfunction readExt(length) {\n\tlet type = src[position++]\n\tif (currentExtensions[type]) {\n\t\tlet end\n\t\treturn currentExtensions[type](src.subarray(position, end = (position += length)), (readPosition) => {\n\t\t\tposition = readPosition;\n\t\t\ttry {\n\t\t\t\treturn read();\n\t\t\t} finally {\n\t\t\t\tposition = end;\n\t\t\t}\n\t\t})\n\t}\n\telse\n\t\tthrow new Error('Unknown extension type ' + type)``\n}\n\nvar keyCache = new Array(4096)\nfunction readKey() {\n\tlet length = src[position++]\n\tif (length >= 0xa0 && length < 0xc0) {\n\t\t// fixstr, potentially use key cache\n\t\tlength = length - 0xa0\n\t\tif (srcStringEnd >= position) // if it has been extracted, must use it (and faster anyway)\n\t\t\treturn srcString.slice(position - srcStringStart, (position += length) - srcStringStart)\n\t\telse if (!(srcStringEnd == 0 && srcEnd < 180))\n\t\t\treturn readFixedString(length)\n\t} else { // not cacheable, go back and do a standard read\n\t\tposition--\n\t\treturn read().toString()\n\t}\n\tlet key = ((length << 5) ^ (length > 1 ? dataView.getUint16(position) : length > 0 ? src[position] : 0)) & 0xfff\n\tlet entry = keyCache[key]\n\tlet checkPosition = position\n\tlet end = position + length - 3\n\tlet chunk\n\tlet i = 0\n\tif (entry && entry.bytes == length) {\n\t\twhile (checkPosition < end) {\n\t\t\tchunk = dataView.getUint32(checkPosition)\n\t\t\tif (chunk != entry[i++]) {\n\t\t\t\tcheckPosition = 0x70000000\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcheckPosition += 4\n\t\t}\n\t\tend += 3\n\t\twhile (checkPosition < end) {\n\t\t\tchunk = src[checkPosition++]\n\t\t\tif (chunk != entry[i++]) {\n\t\t\t\tcheckPosition = 0x70000000\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif (checkPosition === end) {\n\t\t\tposition = checkPosition\n\t\t\treturn entry.string\n\t\t}\n\t\tend -= 3\n\t\tcheckPosition = position\n\t}\n\tentry = []\n\tkeyCache[key] = entry\n\tentry.bytes = length\n\twhile (checkPosition < end) {\n\t\tchunk = dataView.getUint32(checkPosition)\n\t\tentry.push(chunk)\n\t\tcheckPosition += 4\n\t}\n\tend += 3\n\twhile (checkPosition < end) {\n\t\tchunk = src[checkPosition++]\n\t\tentry.push(chunk)\n\t}\n\t// for small blocks, avoiding the overhead of the extract call is helpful\n\tlet string = length < 16 ? shortStringInJS(length) : longStringInJS(length)\n\tif (string != null)\n\t\treturn entry.string = string\n\treturn entry.string = readFixedString(length)\n}\n\n// the registration of the record definition extension (as \"r\")\nconst recordDefinition = (id, highByte) => {\n\tlet structure = read().map(property => property.toString()) // ensure that all keys are strings and that the array is mutable\n\tlet firstByte = id\n\tif (highByte !== undefined) {\n\t\tid = id < 32 ? -((highByte << 5) + id) : ((highByte << 5) + id)\n\t\tstructure.highByte = highByte\n\t}\n\tlet existingStructure = currentStructures[id]\n\tif (existingStructure && existingStructure.isShared) {\n\t\t(currentStructures.restoreStructures || (currentStructures.restoreStructures = []))[id] = existingStructure\n\t}\n\tcurrentStructures[id] = structure\n\tstructure.read = createStructureReader(structure, firstByte)\n\treturn structure.read()\n}\ncurrentExtensions[0] = () => {} // notepack defines extension 0 to mean undefined, so use that as the default here\ncurrentExtensions[0].noBuffer = true\n\ncurrentExtensions[0x65] = () => {\n\tlet data = read()\n\treturn (globalThis[data[0]] || Error)(data[1])\n}\n\ncurrentExtensions[0x69] = (data) => {\n\t// id extension (for structured clones)\n\tlet id = dataView.getUint32(position - 4)\n\tif (!referenceMap)\n\t\treferenceMap = new Map()\n\tlet token = src[position]\n\tlet target\n\t// TODO: handle Maps, Sets, and other types that can cycle; this is complicated, because you potentially need to read\n\t// ahead past references to record structure definitions\n\tif (token >= 0x90 && token < 0xa0 || token == 0xdc || token == 0xdd)\n\t\ttarget = []\n\telse\n\t\ttarget = {}\n\n\tlet refEntry = { target } // a placeholder object\n\treferenceMap.set(id, refEntry)\n\tlet targetProperties = read() // read the next value as the target object to id\n\tif (refEntry.used) // there is a cycle, so we have to assign properties to original target\n\t\treturn Object.assign(target, targetProperties)\n\trefEntry.target = targetProperties // the placeholder wasn't used, replace with the deserialized one\n\treturn targetProperties // no cycle, can just use the returned read object\n}\n\ncurrentExtensions[0x70] = (data) => {\n\t// pointer extension (for structured clones)\n\tlet id = dataView.getUint32(position - 4)\n\tlet refEntry = referenceMap.get(id)\n\trefEntry.used = true\n\treturn refEntry.target\n}\n\ncurrentExtensions[0x73] = () => new Set(read())\n\nexport const typedArrays = ['Int8','Uint8','Uint8Clamped','Int16','Uint16','Int32','Uint32','Float32','Float64','BigInt64','BigUint64'].map(type => type + 'Array')\n\ncurrentExtensions[0x74] = (data) => {\n\tlet typeCode = data[0]\n\tlet typedArrayName = typedArrays[typeCode]\n\tif (!typedArrayName)\n\t\tthrow new Error('Could not find typed array for code ' + typeCode)\n\t// we have to always slice/copy here to get a new ArrayBuffer that is word/byte aligned\n\treturn new globalThis[typedArrayName](Uint8Array.prototype.slice.call(data, 1).buffer)\n}\ncurrentExtensions[0x78] = () => {\n\tlet data = read()\n\treturn new RegExp(data[0], data[1])\n}\nconst TEMP_BUNDLE = []\ncurrentExtensions[0x62] = (data) => {\n\tlet dataSize = (data[0] << 24) + (data[1] << 16) + (data[2] << 8) + data[3]\n\tlet dataPosition = position\n\tposition += dataSize - data.length\n\tbundledStrings = TEMP_BUNDLE\n\tbundledStrings = [readOnlyJSString(), readOnlyJSString()]\n\tbundledStrings.position0 = 0\n\tbundledStrings.position1 = 0\n\tbundledStrings.postBundlePosition = position\n\tposition = dataPosition\n\treturn read()\n}\n\ncurrentExtensions[0xff] = (data) => {\n\t// 32-bit date extension\n\tif (data.length == 4)\n\t\treturn new Date((data[0] * 0x1000000 + (data[1] << 16) + (data[2] << 8) + data[3]) * 1000)\n\telse if (data.length == 8)\n\t\treturn new Date(\n\t\t\t((data[0] << 22) + (data[1] << 14) + (data[2] << 6) + (data[3] >> 2)) / 1000000 +\n\t\t\t((data[3] & 0x3) * 0x100000000 + data[4] * 0x1000000 + (data[5] << 16) + (data[6] << 8) + data[7]) * 1000)\n\telse if (data.length == 12)// TODO: Implement support for negative\n\t\treturn new Date(\n\t\t\t((data[0] << 24) + (data[1] << 16) + (data[2] << 8) + data[3]) / 1000000 +\n\t\t\t(((data[4] & 0x80) ? -0x1000000000000 : 0) + data[6] * 0x10000000000 + data[7] * 0x100000000 + data[8] * 0x1000000 + (data[9] << 16) + (data[10] << 8) + data[11]) * 1000)\n\telse\n\t\treturn new Date('invalid')\n} // notepack defines extension 0 to mean undefined, so use that as the default here\n// registration of bulk record definition?\n// currentExtensions[0x52] = () =>\n\nfunction saveState(callback) {\n\tif (onSaveState)\n\t\tonSaveState();\n\tlet savedSrcEnd = srcEnd\n\tlet savedPosition = position\n\tlet savedStringPosition = stringPosition\n\tlet savedSrcStringStart = srcStringStart\n\tlet savedSrcStringEnd = srcStringEnd\n\tlet savedSrcString = srcString\n\tlet savedStrings = strings\n\tlet savedReferenceMap = referenceMap\n\tlet savedBundledStrings = bundledStrings\n\n\t// TODO: We may need to revisit this if we do more external calls to user code (since it could be slow)\n\tlet savedSrc = new Uint8Array(src.slice(0, srcEnd)) // we copy the data in case it changes while external data is processed\n\tlet savedStructures = currentStructures\n\tlet savedStructuresContents = currentStructures.slice(0, currentStructures.length)\n\tlet savedPackr = currentUnpackr\n\tlet savedSequentialMode = sequentialMode\n\tlet value = callback()\n\tsrcEnd = savedSrcEnd\n\tposition = savedPosition\n\tstringPosition = savedStringPosition\n\tsrcStringStart = savedSrcStringStart\n\tsrcStringEnd = savedSrcStringEnd\n\tsrcString = savedSrcString\n\tstrings = savedStrings\n\treferenceMap = savedReferenceMap\n\tbundledStrings = savedBundledStrings\n\tsrc = savedSrc\n\tsequentialMode = savedSequentialMode\n\tcurrentStructures = savedStructures\n\tcurrentStructures.splice(0, currentStructures.length, ...savedStructuresContents)\n\tcurrentUnpackr = savedPackr\n\tdataView = new DataView(src.buffer, src.byteOffset, src.byteLength)\n\treturn value\n}\nexport function clearSource() {\n\tsrc = null\n\treferenceMap = null\n\tcurrentStructures = null\n}\n\nexport function addExtension(extension) {\n\tif (extension.unpack)\n\t\tcurrentExtensions[extension.type] = extension.unpack\n\telse\n\t\tcurrentExtensions[extension.type] = extension\n}\n\nexport const mult10 = new Array(147) // this is a table matching binary exponents to the multiplier to determine significant digit rounding\nfor (let i = 0; i < 256; i++) {\n\tmult10[i] = +('1e' + Math.floor(45.15 - i * 0.30103))\n}\nexport const Decoder = Unpackr\nvar defaultUnpackr = new Unpackr({ useRecords: false })\nexport const unpack = defaultUnpackr.unpack\nexport const unpackMultiple = defaultUnpackr.unpackMultiple\nexport const decode = defaultUnpackr.unpack\nexport const FLOAT32_OPTIONS = {\n\tNEVER: 0,\n\tALWAYS: 1,\n\tDECIMAL_ROUND: 3,\n\tDECIMAL_FIT: 4\n}\nlet f32Array = new Float32Array(1)\nlet u8Array = new Uint8Array(f32Array.buffer, 0, 4)\nexport function roundFloat32(float32Number) {\n\tf32Array[0] = float32Number\n\tlet multiplier = mult10[((u8Array[3] & 0x7f) << 1) | (u8Array[2] >> 7)]\n\treturn ((multiplier * float32Number + (float32Number > 0 ? 0.5 : -0.5)) >> 0) / multiplier\n}\nexport function setReadStruct(updatedReadStruct, loadedStructs, saveState) {\n\treadStruct = updatedReadStruct;\n\tonLoadedStructures = loadedStructs;\n\tonSaveState = saveState;\n}\n","import { Unpackr, mult10, C1Type, typedArrays, addExtension as unpackAddExtension } from './unpack.js'\nlet textEncoder\ntry {\n\ttextEncoder = new TextEncoder()\n} catch (error) {}\nlet extensions, extensionClasses\nconst hasNodeBuffer = typeof Buffer !== 'undefined'\nconst ByteArrayAllocate = hasNodeBuffer ?\n\tfunction(length) { return Buffer.allocUnsafeSlow(length) } : Uint8Array\nconst ByteArray = hasNodeBuffer ? Buffer : Uint8Array\nconst MAX_BUFFER_SIZE = hasNodeBuffer ? 0x100000000 : 0x7fd00000\nlet target, keysTarget\nlet targetView\nlet position = 0\nlet safeEnd\nlet bundledStrings = null\nlet writeStructSlots\nconst MAX_BUNDLE_SIZE = 0xf000\nconst hasNonLatin = /[\\u0080-\\uFFFF]/\nexport const RECORD_SYMBOL = Symbol('record-id')\nexport class Packr extends Unpackr {\n\tconstructor(options) {\n\t\tsuper(options)\n\t\tthis.offset = 0\n\t\tlet typeBuffer\n\t\tlet start\n\t\tlet hasSharedUpdate\n\t\tlet structures\n\t\tlet referenceMap\n\t\tlet encodeUtf8 = ByteArray.prototype.utf8Write ? function(string, position) {\n\t\t\treturn target.utf8Write(string, position, 0xffffffff)\n\t\t} : (textEncoder && textEncoder.encodeInto) ?\n\t\t\tfunction(string, position) {\n\t\t\t\treturn textEncoder.encodeInto(string, target.subarray(position)).written\n\t\t\t} : false\n\n\t\tlet packr = this\n\t\tif (!options)\n\t\t\toptions = {}\n\t\tlet isSequential = options && options.sequential\n\t\tlet hasSharedStructures = options.structures || options.saveStructures\n\t\tlet maxSharedStructures = options.maxSharedStructures\n\t\tif (maxSharedStructures == null)\n\t\t\tmaxSharedStructures = hasSharedStructures ? 32 : 0\n\t\tif (maxSharedStructures > 8160)\n\t\t\tthrow new Error('Maximum maxSharedStructure is 8160')\n\t\tif (options.structuredClone && options.moreTypes == undefined) {\n\t\t\toptions.moreTypes = true\n\t\t}\n\t\tlet maxOwnStructures = options.maxOwnStructures\n\t\tif (maxOwnStructures == null)\n\t\t\tmaxOwnStructures = hasSharedStructures ? 32 : 64\n\t\tif (!this.structures && options.useRecords != false)\n\t\t\tthis.structures = []\n\t\t// two byte record ids for shared structures\n\t\tlet useTwoByteRecords = maxSharedStructures > 32 || (maxOwnStructures + maxSharedStructures > 64)\t\t\n\t\tlet sharedLimitId = maxSharedStructures + 0x40\n\t\tlet maxStructureId = maxSharedStructures + maxOwnStructures + 0x40\n\t\tif (maxStructureId > 8256) {\n\t\t\tthrow new Error('Maximum maxSharedStructure + maxOwnStructure is 8192')\n\t\t}\n\t\tlet recordIdsToRemove = []\n\t\tlet transitionsCount = 0\n\t\tlet serializationsSinceTransitionRebuild = 0\n\n\t\tthis.pack = this.encode = function(value, encodeOptions) {\n\t\t\tif (!target) {\n\t\t\t\ttarget = new ByteArrayAllocate(8192)\n\t\t\t\ttargetView = target.dataView = new DataView(target.buffer, 0, 8192)\n\t\t\t\tposition = 0\n\t\t\t}\n\t\t\tsafeEnd = target.length - 10\n\t\t\tif (safeEnd - position < 0x800) {\n\t\t\t\t// don't start too close to the end, \n\t\t\t\ttarget = new ByteArrayAllocate(target.length)\n\t\t\t\ttargetView = target.dataView = new DataView(target.buffer, 0, target.length)\n\t\t\t\tsafeEnd = target.length - 10\n\t\t\t\tposition = 0\n\t\t\t} else\n\t\t\t\tposition = (position + 7) & 0x7ffffff8 // Word align to make any future copying of this buffer faster\n\t\t\tstart = position\n\t\t\treferenceMap = packr.structuredClone ? new Map() : null\n\t\t\tif (packr.bundleStrings && typeof value !== 'string') {\n\t\t\t\tbundledStrings = []\n\t\t\t\tbundledStrings.size = Infinity // force a new bundle start on first string\n\t\t\t} else\n\t\t\t\tbundledStrings = null\n\t\t\tstructures = packr.structures\n\t\t\tif (structures) {\n\t\t\t\tif (structures.uninitialized)\n\t\t\t\t\tstructures = packr._mergeStructures(packr.getStructures())\n\t\t\t\tlet sharedLength = structures.sharedLength || 0\n\t\t\t\tif (sharedLength > maxSharedStructures) {\n\t\t\t\t\t//if (maxSharedStructures <= 32 && structures.sharedLength > 32) // TODO: could support this, but would need to update the limit ids\n\t\t\t\t\tthrow new Error('Shared structures is larger than maximum shared structures, try increasing maxSharedStructures to ' + structures.sharedLength)\n\t\t\t\t}\n\t\t\t\tif (!structures.transitions) {\n\t\t\t\t\t// rebuild our structure transitions\n\t\t\t\t\tstructures.transitions = Object.create(null)\n\t\t\t\t\tfor (let i = 0; i < sharedLength; i++) {\n\t\t\t\t\t\tlet keys = structures[i]\n\t\t\t\t\t\tif (!keys)\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\tlet nextTransition, transition = structures.transitions\n\t\t\t\t\t\tfor (let j = 0, l = keys.length; j < l; j++) {\n\t\t\t\t\t\t\tlet key = keys[j]\n\t\t\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttransition[RECORD_SYMBOL] = i + 0x40\n\t\t\t\t\t}\n\t\t\t\t\tthis.lastNamedStructuresLength = sharedLength\n\t\t\t\t}\n\t\t\t\tif (!isSequential) {\n\t\t\t\t\tstructures.nextId = sharedLength + 0x40\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hasSharedUpdate)\n\t\t\t\thasSharedUpdate = false\n\t\t\ttry {\n\t\t\t\tif (packr.randomAccessStructure && value.constructor && value.constructor === Object)\n\t\t\t\t\twriteStruct(value);\n\t\t\t\telse\n\t\t\t\t\tpack(value)\n\t\t\t\tlet lastBundle = bundledStrings;\n\t\t\t\tif (bundledStrings)\n\t\t\t\t\twriteBundles(start, pack, 0)\n\t\t\t\tif (referenceMap && referenceMap.idsToInsert) {\n\t\t\t\t\tlet idsToInsert = referenceMap.idsToInsert.sort((a, b) => a.offset > b.offset ? 1 : -1);\n\t\t\t\t\tlet i = idsToInsert.length;\n\t\t\t\t\tlet incrementPosition = -1;\n\t\t\t\t\twhile (lastBundle && i > 0) {\n\t\t\t\t\t\tlet insertionPoint = idsToInsert[--i].offset + start;\n\t\t\t\t\t\tif (insertionPoint < (lastBundle.stringsPosition + start) && incrementPosition === -1)\n\t\t\t\t\t\t\tincrementPosition = 0;\n\t\t\t\t\t\tif (insertionPoint > (lastBundle.position + start)) {\n\t\t\t\t\t\t\tif (incrementPosition >= 0)\n\t\t\t\t\t\t\t\tincrementPosition += 6;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (incrementPosition >= 0) {\n\t\t\t\t\t\t\t\t// update the bundle reference now\n\t\t\t\t\t\t\t\ttargetView.setUint32(lastBundle.position + start,\n\t\t\t\t\t\t\t\t\ttargetView.getUint32(lastBundle.position + start) + incrementPosition)\n\t\t\t\t\t\t\t\tincrementPosition = -1; // reset\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlastBundle = lastBundle.previous;\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (incrementPosition >= 0 && lastBundle) {\n\t\t\t\t\t\t// update the bundle reference now\n\t\t\t\t\t\ttargetView.setUint32(lastBundle.position + start,\n\t\t\t\t\t\t\ttargetView.getUint32(lastBundle.position + start) + incrementPosition)\n\t\t\t\t\t}\n\t\t\t\t\tposition += idsToInsert.length * 6;\n\t\t\t\t\tif (position > safeEnd)\n\t\t\t\t\t\tmakeRoom(position)\n\t\t\t\t\tpackr.offset = position\n\t\t\t\t\tlet serialized = insertIds(target.subarray(start, position), idsToInsert)\n\t\t\t\t\treferenceMap = null\n\t\t\t\t\treturn serialized\n\t\t\t\t}\n\t\t\t\tpackr.offset = position // update the offset so next serialization doesn't write over our buffer, but can continue writing to same buffer sequentially\n\t\t\t\tif (encodeOptions & REUSE_BUFFER_MODE) {\n\t\t\t\t\ttarget.start = start\n\t\t\t\t\ttarget.end = position\n\t\t\t\t\treturn target\n\t\t\t\t}\n\t\t\t\treturn target.subarray(start, position) // position can change if we call pack again in saveStructures, so we get the buffer now\n\t\t\t} finally {\n\t\t\t\tif (structures) {\n\t\t\t\t\tif (serializationsSinceTransitionRebuild < 10)\n\t\t\t\t\t\tserializationsSinceTransitionRebuild++\n\t\t\t\t\tlet sharedLength = structures.sharedLength || 0\n\t\t\t\t\tif (structures.length > sharedLength)\n\t\t\t\t\t\tstructures.length = sharedLength\n\t\t\t\t\tif (transitionsCount > 10000) {\n\t\t\t\t\t\t// force a rebuild occasionally after a lot of transitions so it can get cleaned up\n\t\t\t\t\t\tstructures.transitions = null\n\t\t\t\t\t\tserializationsSinceTransitionRebuild = 0\n\t\t\t\t\t\ttransitionsCount = 0\n\t\t\t\t\t\tif (recordIdsToRemove.length > 0)\n\t\t\t\t\t\t\trecordIdsToRemove = []\n\t\t\t\t\t} else if (recordIdsToRemove.length > 0 && !isSequential) {\n\t\t\t\t\t\tfor (let i = 0, l = recordIdsToRemove.length; i < l; i++) {\n\t\t\t\t\t\t\trecordIdsToRemove[i][RECORD_SYMBOL] = 0\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecordIdsToRemove = []\n\t\t\t\t\t}\n\t\t\t\t\tif (hasSharedUpdate && packr.saveStructures) {\n\t\t\t\t\t\t// we can't rely on start/end with REUSE_BUFFER_MODE since they will (probably) change when we save\n\t\t\t\t\t\tlet returnBuffer = target.subarray(start, position)\n\t\t\t\t\t\tlet newSharedData = prepareStructures(structures, packr);\n\t\t\t\t\t\tif (packr.saveStructures(newSharedData, newSharedData.isCompatible) === false) {\n\t\t\t\t\t\t\t// get updated structures and try again if the update failed\n\t\t\t\t\t\t\treturn packr.pack(value)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpackr.lastNamedStructuresLength = sharedLength\n\t\t\t\t\t\treturn returnBuffer\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (encodeOptions & RESET_BUFFER_MODE)\n\t\t\t\t\tposition = start\n\t\t\t}\n\t\t}\n\t\tconst pack = (value) => {\n\t\t\tif (position > safeEnd)\n\t\t\t\ttarget = makeRoom(position)\n\n\t\t\tvar type = typeof value\n\t\t\tvar length\n\t\t\tif (type === 'string') {\n\t\t\t\tlet strLength = value.length\n\t\t\t\tif (bundledStrings && strLength >= 4 && strLength < 0x1000) {\n\t\t\t\t\tif ((bundledStrings.size += strLength) > MAX_BUNDLE_SIZE) {\n\t\t\t\t\t\tlet extStart\n\t\t\t\t\t\tlet maxBytes = (bundledStrings[0] ? bundledStrings[0].length * 3 + bundledStrings[1].length : 0) + 10\n\t\t\t\t\t\tif (position + maxBytes > safeEnd)\n\t\t\t\t\t\t\ttarget = makeRoom(position + maxBytes)\n\t\t\t\t\t\tlet lastBundle\n\t\t\t\t\t\tif (bundledStrings.position) { // here we use the 0x62 extension to write the last bundle and reserve space for the reference pointer to the next/current bundle\n\t\t\t\t\t\t\tlastBundle = bundledStrings\n\t\t\t\t\t\t\ttarget[position] = 0xc8 // ext 16\n\t\t\t\t\t\t\tposition += 3 // reserve for the writing bundle size\n\t\t\t\t\t\t\ttarget[position++] = 0x62 // 'b'\n\t\t\t\t\t\t\textStart = position - start\n\t\t\t\t\t\t\tposition += 4 // reserve for writing bundle reference\n\t\t\t\t\t\t\twriteBundles(start, pack, 0) // write the last bundles\n\t\t\t\t\t\t\ttargetView.setUint16(extStart + start - 3, position - start - extStart)\n\t\t\t\t\t\t} else { // here we use the 0x62 extension just to reserve the space for the reference pointer to the bundle (will be updated once the bundle is written)\n\t\t\t\t\t\t\ttarget[position++] = 0xd6 // fixext 4\n\t\t\t\t\t\t\ttarget[position++] = 0x62 // 'b'\n\t\t\t\t\t\t\textStart = position - start\n\t\t\t\t\t\t\tposition += 4 // reserve for writing bundle reference\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbundledStrings = ['', ''] // create new ones\n\t\t\t\t\t\tbundledStrings.previous = lastBundle;\n\t\t\t\t\t\tbundledStrings.size = 0\n\t\t\t\t\t\tbundledStrings.position = extStart\n\t\t\t\t\t}\n\t\t\t\t\tlet twoByte = hasNonLatin.test(value)\n\t\t\t\t\tbundledStrings[twoByte ? 0 : 1] += value\n\t\t\t\t\ttarget[position++] = 0xc1\n\t\t\t\t\tpack(twoByte ? -strLength : strLength);\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tlet headerSize\n\t\t\t\t// first we estimate the header size, so we can write to the correct location\n\t\t\t\tif (strLength < 0x20) {\n\t\t\t\t\theaderSize = 1\n\t\t\t\t} else if (strLength < 0x100) {\n\t\t\t\t\theaderSize = 2\n\t\t\t\t} else if (strLength < 0x10000) {\n\t\t\t\t\theaderSize = 3\n\t\t\t\t} else {\n\t\t\t\t\theaderSize = 5\n\t\t\t\t}\n\t\t\t\tlet maxBytes = strLength * 3\n\t\t\t\tif (position + maxBytes > safeEnd)\n\t\t\t\t\ttarget = makeRoom(position + maxBytes)\n\n\t\t\t\tif (strLength < 0x40 || !encodeUtf8) {\n\t\t\t\t\tlet i, c1, c2, strPosition = position + headerSize\n\t\t\t\t\tfor (i = 0; i < strLength; i++) {\n\t\t\t\t\t\tc1 = value.charCodeAt(i)\n\t\t\t\t\t\tif (c1 < 0x80) {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1\n\t\t\t\t\t\t} else if (c1 < 0x800) {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 | 0xc0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t(c1 & 0xfc00) === 0xd800 &&\n\t\t\t\t\t\t\t((c2 = value.charCodeAt(i + 1)) & 0xfc00) === 0xdc00\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tc1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff)\n\t\t\t\t\t\t\ti++\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 18 | 0xf0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 12 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 12 | 0xe0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlength = strPosition - position - headerSize\n\t\t\t\t} else {\n\t\t\t\t\tlength = encodeUtf8(value, position + headerSize)\n\t\t\t\t}\n\n\t\t\t\tif (length < 0x20) {\n\t\t\t\t\ttarget[position++] = 0xa0 | length\n\t\t\t\t} else if (length < 0x100) {\n\t\t\t\t\tif (headerSize < 2) {\n\t\t\t\t\t\ttarget.copyWithin(position + 2, position + 1, position + 1 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\ttarget[position++] = length\n\t\t\t\t} else if (length < 0x10000) {\n\t\t\t\t\tif (headerSize < 3) {\n\t\t\t\t\t\ttarget.copyWithin(position + 3, position + 2, position + 2 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0xda\n\t\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t\t} else {\n\t\t\t\t\tif (headerSize < 5) {\n\t\t\t\t\t\ttarget.copyWithin(position + 5, position + 3, position + 3 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0xdb\n\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\tposition += 4\n\t\t\t\t}\n\t\t\t\tposition += length\n\t\t\t} else if (type === 'number') {\n\t\t\t\tif (value >>> 0 === value) {// positive integer, 32-bit or less\n\t\t\t\t\t// positive uint\n\t\t\t\t\tif (value < 0x20 || (value < 0x80 && this.useRecords === false) || (value < 0x40 && !this.randomAccessStructure)) {\n\t\t\t\t\t\ttarget[position++] = value\n\t\t\t\t\t} else if (value < 0x100) {\n\t\t\t\t\t\ttarget[position++] = 0xcc\n\t\t\t\t\t\ttarget[position++] = value\n\t\t\t\t\t} else if (value < 0x10000) {\n\t\t\t\t\t\ttarget[position++] = 0xcd\n\t\t\t\t\t\ttarget[position++] = value >> 8\n\t\t\t\t\t\ttarget[position++] = value & 0xff\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[position++] = 0xce\n\t\t\t\t\t\ttargetView.setUint32(position, value)\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t}\n\t\t\t\t} else if (value >> 0 === value) { // negative integer\n\t\t\t\t\tif (value >= -0x20) {\n\t\t\t\t\t\ttarget[position++] = 0x100 + value\n\t\t\t\t\t} else if (value >= -0x80) {\n\t\t\t\t\t\ttarget[position++] = 0xd0\n\t\t\t\t\t\ttarget[position++] = value + 0x100\n\t\t\t\t\t} else if (value >= -0x8000) {\n\t\t\t\t\t\ttarget[position++] = 0xd1\n\t\t\t\t\t\ttargetView.setInt16(position, value)\n\t\t\t\t\t\tposition += 2\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[position++] = 0xd2\n\t\t\t\t\t\ttargetView.setInt32(position, value)\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet useFloat32\n\t\t\t\t\tif ((useFloat32 = this.useFloat32) > 0 && value < 0x100000000 && value >= -0x80000000) {\n\t\t\t\t\t\ttarget[position++] = 0xca\n\t\t\t\t\t\ttargetView.setFloat32(position, value)\n\t\t\t\t\t\tlet xShifted\n\t\t\t\t\t\tif (useFloat32 < 4 ||\n\t\t\t\t\t\t\t\t// this checks for rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n\t\t\t\t\t\t\t\t((xShifted = value * mult10[((target[position] & 0x7f) << 1) | (target[position + 1] >> 7)]) >> 0) === xShifted) {\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tposition-- // move back into position for writing a double\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0xcb\n\t\t\t\t\ttargetView.setFloat64(position, value)\n\t\t\t\t\tposition += 8\n\t\t\t\t}\n\t\t\t} else if (type === 'object') {\n\t\t\t\tif (!value)\n\t\t\t\t\ttarget[position++] = 0xc0\n\t\t\t\telse {\n\t\t\t\t\tif (referenceMap) {\n\t\t\t\t\t\tlet referee = referenceMap.get(value)\n\t\t\t\t\t\tif (referee) {\n\t\t\t\t\t\t\tif (!referee.id) {\n\t\t\t\t\t\t\t\tlet idsToInsert = referenceMap.idsToInsert || (referenceMap.idsToInsert = [])\n\t\t\t\t\t\t\t\treferee.id = idsToInsert.push(referee)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget[position++] = 0xd6 // fixext 4\n\t\t\t\t\t\t\ttarget[position++] = 0x70 // \"p\" for pointer\n\t\t\t\t\t\t\ttargetView.setUint32(position, referee.id)\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else \n\t\t\t\t\t\t\treferenceMap.set(value, { offset: position - start })\n\t\t\t\t\t}\n\t\t\t\t\tlet constructor = value.constructor\n\t\t\t\t\tif (constructor === Object) {\n\t\t\t\t\t\twriteObject(value, true)\n\t\t\t\t\t} else if (constructor === Array) {\n\t\t\t\t\t\tlength = value.length\n\t\t\t\t\t\tif (length < 0x10) {\n\t\t\t\t\t\t\ttarget[position++] = 0x90 | length\n\t\t\t\t\t\t} else if (length < 0x10000) {\n\t\t\t\t\t\t\ttarget[position++] = 0xdc\n\t\t\t\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget[position++] = 0xdd\n\t\t\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\t\t\tpack(value[i])\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (constructor === Map) {\n\t\t\t\t\t\tlength = value.size\n\t\t\t\t\t\tif (length < 0x10) {\n\t\t\t\t\t\t\ttarget[position++] = 0x80 | length\n\t\t\t\t\t\t} else if (length < 0x10000) {\n\t\t\t\t\t\t\ttarget[position++] = 0xde\n\t\t\t\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget[position++] = 0xdf\n\t\t\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let [ key, entryValue ] of value) {\n\t\t\t\t\t\t\tpack(key)\n\t\t\t\t\t\t\tpack(entryValue)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\t\n\t\t\t\t\t\tfor (let i = 0, l = extensions.length; i < l; i++) {\n\t\t\t\t\t\t\tlet extensionClass = extensionClasses[i]\n\t\t\t\t\t\t\tif (value instanceof extensionClass) {\n\t\t\t\t\t\t\t\tlet extension = extensions[i]\n\t\t\t\t\t\t\t\tif (extension.write) {\n\t\t\t\t\t\t\t\t\tif (extension.type) {\n\t\t\t\t\t\t\t\t\t\ttarget[position++] = 0xd4 // one byte \"tag\" extension\n\t\t\t\t\t\t\t\t\t\ttarget[position++] = extension.type\n\t\t\t\t\t\t\t\t\t\ttarget[position++] = 0\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tpack(extension.write.call(this, value))\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlet currentTarget = target\n\t\t\t\t\t\t\t\tlet currentTargetView = targetView\n\t\t\t\t\t\t\t\tlet currentPosition = position\n\t\t\t\t\t\t\t\ttarget = null\n\t\t\t\t\t\t\t\tlet result\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tresult = extension.pack.call(this, value, (size) => {\n\t\t\t\t\t\t\t\t\t\t// restore target and use it\n\t\t\t\t\t\t\t\t\t\ttarget = currentTarget\n\t\t\t\t\t\t\t\t\t\tcurrentTarget = null\n\t\t\t\t\t\t\t\t\t\tposition += size\n\t\t\t\t\t\t\t\t\t\tif (position > safeEnd)\n\t\t\t\t\t\t\t\t\t\t\tmakeRoom(position)\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\ttarget, targetView, position: position - size\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}, pack)\n\t\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\t\t// restore current target information (unless already restored)\n\t\t\t\t\t\t\t\t\tif (currentTarget) {\n\t\t\t\t\t\t\t\t\t\ttarget = currentTarget\n\t\t\t\t\t\t\t\t\t\ttargetView = currentTargetView\n\t\t\t\t\t\t\t\t\t\tposition = currentPosition\n\t\t\t\t\t\t\t\t\t\tsafeEnd = target.length - 10\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\t\t\tif (result.length + position > safeEnd)\n\t\t\t\t\t\t\t\t\t\tmakeRoom(result.length + position)\n\t\t\t\t\t\t\t\t\tposition = writeExtensionData(result, target, position, extension.type)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// no extension found, write as object\n\t\t\t\t\t\twriteObject(value, !value.hasOwnProperty) // if it doesn't have hasOwnProperty, don't do hasOwnProperty checks\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'boolean') {\n\t\t\t\ttarget[position++] = value ? 0xc3 : 0xc2\n\t\t\t} else if (type === 'bigint') {\n\t\t\t\tif (value < (BigInt(1)<<BigInt(63)) && value >= -(BigInt(1)<<BigInt(63))) {\n\t\t\t\t\t// use a signed int as long as it fits\n\t\t\t\t\ttarget[position++] = 0xd3\n\t\t\t\t\ttargetView.setBigInt64(position, value)\n\t\t\t\t} else if (value < (BigInt(1)<<BigInt(64)) && value > 0) {\n\t\t\t\t\t// if we can fit an unsigned int, use that\n\t\t\t\t\ttarget[position++] = 0xcf\n\t\t\t\t\ttargetView.setBigUint64(position, value)\n\t\t\t\t} else {\n\t\t\t\t\t// overflow\n\t\t\t\t\tif (this.largeBigIntToFloat) {\n\t\t\t\t\t\ttarget[position++] = 0xcb\n\t\t\t\t\t\ttargetView.setFloat64(position, Number(value))\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new RangeError(value + ' was too large to fit in MessagePack 64-bit integer format, set largeBigIntToFloat to convert to float-64')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tposition += 8\n\t\t\t} else if (type === 'undefined') {\n\t\t\t\tif (this.encodeUndefinedAsNil)\n\t\t\t\t\ttarget[position++] = 0xc0\n\t\t\t\telse {\n\t\t\t\t\ttarget[position++] = 0xd4 // a number of implementations use fixext1 with type 0, data 0 to denote undefined, so we follow suite\n\t\t\t\t\ttarget[position++] = 0\n\t\t\t\t\ttarget[position++] = 0\n\t\t\t\t}\n\t\t\t} else if (type === 'function') {\n\t\t\t\tpack(this.writeFunction && this.writeFunction()) // if there is a writeFunction, use it, otherwise just encode as undefined\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unknown type: ' + type)\n\t\t\t}\n\t\t}\n\n\t\tconst writeObject = this.useRecords === false ? this.variableMapSize ? (object) => {\n\t\t\t// this method is slightly slower, but generates \"preferred serialization\" (optimally small for smaller objects)\n\t\t\tlet keys = Object.keys(object)\n\t\t\tlet length = keys.length\n\t\t\tif (length < 0x10) {\n\t\t\t\ttarget[position++] = 0x80 | length\n\t\t\t} else if (length < 0x10000) {\n\t\t\t\ttarget[position++] = 0xde\n\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t} else {\n\t\t\t\ttarget[position++] = 0xdf\n\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\tposition += 4\n\t\t\t}\n\t\t\tlet key\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tpack(key = keys[i])\n\t\t\t\tpack(object[key])\n\t\t\t}\n\t\t} :\n\t\t(object, safePrototype) => {\n\t\t\ttarget[position++] = 0xde // always using map 16, so we can preallocate and set the length afterwards\n\t\t\tlet objectOffset = position - start\n\t\t\tposition += 2\n\t\t\tlet size = 0\n\t\t\tfor (let key in object) {\n\t\t\t\tif (safePrototype || object.hasOwnProperty(key)) {\n\t\t\t\t\tpack(key)\n\t\t\t\t\tpack(object[key])\n\t\t\t\t\tsize++\n\t\t\t\t}\n\t\t\t}\n\t\t\ttarget[objectOffset++ + start] = size >> 8\n\t\t\ttarget[objectOffset + start] = size & 0xff\n\t\t} :\n\t\t(options.progressiveRecords && !useTwoByteRecords) ?  // this is about 2% faster for highly stable structures, since it only requires one for-in loop (but much more expensive when new structure needs to be written)\n\t\t(object, safePrototype) => {\n\t\t\tlet nextTransition, transition = structures.transitions || (structures.transitions = Object.create(null))\n\t\t\tlet objectOffset = position++ - start\n\t\t\tlet wroteKeys\n\t\t\tfor (let key in object) {\n\t\t\t\tif (safePrototype || object.hasOwnProperty(key)) {\n\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\tif (nextTransition)\n\t\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\telse {\n\t\t\t\t\t\t// record doesn't exist, create full new record and insert it\n\t\t\t\t\t\tlet keys = Object.keys(object)\n\t\t\t\t\t\tlet lastTransition = transition\n\t\t\t\t\t\ttransition = structures.transitions\n\t\t\t\t\t\tlet newTransitions = 0\n\t\t\t\t\t\tfor (let i = 0, l = keys.length; i < l; i++) {\n\t\t\t\t\t\t\tlet key = keys[i]\n\t\t\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\t\t\tnewTransitions++\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (objectOffset + start + 1 == position) {\n\t\t\t\t\t\t\t// first key, so we don't need to insert, we can just write record directly\n\t\t\t\t\t\t\tposition--\n\t\t\t\t\t\t\tnewRecord(transition, keys, newTransitions)\n\t\t\t\t\t\t} else // otherwise we need to insert the record, moving existing data after the record\n\t\t\t\t\t\t\tinsertNewRecord(transition, keys, objectOffset, newTransitions)\n\t\t\t\t\t\twroteKeys = true\n\t\t\t\t\t\ttransition = lastTransition[key]\n\t\t\t\t\t}\n\t\t\t\t\tpack(object[key])\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!wroteKeys) {\n\t\t\t\tlet recordId = transition[RECORD_SYMBOL]\n\t\t\t\tif (recordId)\n\t\t\t\t\ttarget[objectOffset + start] = recordId\n\t\t\t\telse\n\t\t\t\t\tinsertNewRecord(transition, Object.keys(object), objectOffset, 0)\n\t\t\t}\n\t\t} :\n\t\t(object, safePrototype) => {\n\t\t\tlet nextTransition, transition = structures.transitions || (structures.transitions = Object.create(null))\n\t\t\tlet newTransitions = 0\n\t\t\tfor (let key in object) if (safePrototype || object.hasOwnProperty(key)) {\n\t\t\t\tnextTransition = transition[key]\n\t\t\t\tif (!nextTransition) {\n\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\tnewTransitions++\n\t\t\t\t}\n\t\t\t\ttransition = nextTransition\n\t\t\t}\n\t\t\tlet recordId = transition[RECORD_SYMBOL]\n\t\t\tif (recordId) {\n\t\t\t\tif (recordId >= 0x60 && useTwoByteRecords) {\n\t\t\t\t\ttarget[position++] = ((recordId -= 0x60) & 0x1f) + 0x60\n\t\t\t\t\ttarget[position++] = recordId >> 5\n\t\t\t\t} else\n\t\t\t\t\ttarget[position++] = recordId\n\t\t\t} else {\n\t\t\t\tnewRecord(transition, transition.__keys__ || Object.keys(object), newTransitions)\n\t\t\t}\n\t\t\t// now write the values\n\t\t\tfor (let key in object)\n\t\t\t\tif (safePrototype || object.hasOwnProperty(key))\n\t\t\t\t\tpack(object[key])\n\t\t}\n\t\tconst makeRoom = (end) => {\n\t\t\tlet newSize\n\t\t\tif (end > 0x1000000) {\n\t\t\t\t// special handling for really large buffers\n\t\t\t\tif ((end - start) > MAX_BUFFER_SIZE)\n\t\t\t\t\tthrow new Error('Packed buffer would be larger than maximum buffer size')\n\t\t\t\tnewSize = Math.min(MAX_BUFFER_SIZE,\n\t\t\t\t\tMath.round(Math.max((end - start) * (end > 0x4000000 ? 1.25 : 2), 0x400000) / 0x1000) * 0x1000)\n\t\t\t} else // faster handling for smaller buffers\n\t\t\t\tnewSize = ((Math.max((end - start) << 2, target.length - 1) >> 12) + 1) << 12\n\t\t\tlet newBuffer = new ByteArrayAllocate(newSize)\n\t\t\ttargetView = newBuffer.dataView = new DataView(newBuffer.buffer, 0, newSize)\n\t\t\tend = Math.min(end, target.length)\n\t\t\tif (target.copy)\n\t\t\t\ttarget.copy(newBuffer, 0, start, end)\n\t\t\telse\n\t\t\t\tnewBuffer.set(target.slice(start, end))\n\t\t\tposition -= start\n\t\t\tstart = 0\n\t\t\tsafeEnd = newBuffer.length - 10\n\t\t\treturn target = newBuffer\n\t\t}\n\t\tconst newRecord = (transition, keys, newTransitions) => {\n\t\t\tlet recordId = structures.nextId\n\t\t\tif (!recordId)\n\t\t\t\trecordId = 0x40\n\t\t\tif (recordId < sharedLimitId && this.shouldShareStructure && !this.shouldShareStructure(keys)) {\n\t\t\t\trecordId = structures.nextOwnId\n\t\t\t\tif (!(recordId < maxStructureId))\n\t\t\t\t\trecordId = sharedLimitId\n\t\t\t\tstructures.nextOwnId = recordId + 1\n\t\t\t} else {\n\t\t\t\tif (recordId >= maxStructureId)// cycle back around\n\t\t\t\t\trecordId = sharedLimitId\n\t\t\t\tstructures.nextId = recordId + 1\n\t\t\t}\n\t\t\tlet highByte = keys.highByte = recordId >= 0x60 && useTwoByteRecords ? (recordId - 0x60) >> 5 : -1\n\t\t\ttransition[RECORD_SYMBOL] = recordId\n\t\t\ttransition.__keys__ = keys\n\t\t\tstructures[recordId - 0x40] = keys\n\n\t\t\tif (recordId < sharedLimitId) {\n\t\t\t\tkeys.isShared = true\n\t\t\t\tstructures.sharedLength = recordId - 0x3f\n\t\t\t\thasSharedUpdate = true\n\t\t\t\tif (highByte >= 0) {\n\t\t\t\t\ttarget[position++] = (recordId & 0x1f) + 0x60\n\t\t\t\t\ttarget[position++] = highByte\n\t\t\t\t} else {\n\t\t\t\t\ttarget[position++] = recordId\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (highByte >= 0) {\n\t\t\t\t\ttarget[position++] = 0xd5 // fixext 2\n\t\t\t\t\ttarget[position++] = 0x72 // \"r\" record defintion extension type\n\t\t\t\t\ttarget[position++] = (recordId & 0x1f) + 0x60\n\t\t\t\t\ttarget[position++] = highByte\n\t\t\t\t} else {\n\t\t\t\t\ttarget[position++] = 0xd4 // fixext 1\n\t\t\t\t\ttarget[position++] = 0x72 // \"r\" record defintion extension type\n\t\t\t\t\ttarget[position++] = recordId\n\t\t\t\t}\n\n\t\t\t\tif (newTransitions)\n\t\t\t\t\ttransitionsCount += serializationsSinceTransitionRebuild * newTransitions\n\t\t\t\t// record the removal of the id, we can maintain our shared structure\n\t\t\t\tif (recordIdsToRemove.length >= maxOwnStructures)\n\t\t\t\t\trecordIdsToRemove.shift()[RECORD_SYMBOL] = 0 // we are cycling back through, and have to remove old ones\n\t\t\t\trecordIdsToRemove.push(transition)\n\t\t\t\tpack(keys)\n\t\t\t}\n\t\t}\n\t\tconst insertNewRecord = (transition, keys, insertionOffset, newTransitions) => {\n\t\t\tlet mainTarget = target\n\t\t\tlet mainPosition = position\n\t\t\tlet mainSafeEnd = safeEnd\n\t\t\tlet mainStart = start\n\t\t\ttarget = keysTarget\n\t\t\tposition = 0\n\t\t\tstart = 0\n\t\t\tif (!target)\n\t\t\t\tkeysTarget = target = new ByteArrayAllocate(8192)\n\t\t\tsafeEnd = target.length - 10\n\t\t\tnewRecord(transition, keys, newTransitions)\n\t\t\tkeysTarget = target\n\t\t\tlet keysPosition = position\n\t\t\ttarget = mainTarget\n\t\t\tposition = mainPosition\n\t\t\tsafeEnd = mainSafeEnd\n\t\t\tstart = mainStart\n\t\t\tif (keysPosition > 1) {\n\t\t\t\tlet newEnd = position + keysPosition - 1\n\t\t\t\tif (newEnd > safeEnd)\n\t\t\t\t\tmakeRoom(newEnd)\n\t\t\t\tlet insertionPosition = insertionOffset + start\n\t\t\t\ttarget.copyWithin(insertionPosition + keysPosition, insertionPosition + 1, position)\n\t\t\t\ttarget.set(keysTarget.slice(0, keysPosition), insertionPosition)\n\t\t\t\tposition = newEnd\n\t\t\t} else {\n\t\t\t\ttarget[insertionOffset + start] = keysTarget[0]\n\t\t\t}\n\t\t}\n\t\tconst writeStruct = (object, safePrototype) => {\n\t\t\tlet newPosition = writeStructSlots(object, target, position, structures, makeRoom, (value, newPosition, notifySharedUpdate) => {\n\t\t\t\tif (notifySharedUpdate)\n\t\t\t\t\treturn hasSharedUpdate = true;\n\t\t\t\tposition = newPosition;\n\t\t\t\tif (start > 0) {\n\t\t\t\t\tpack(value);\n\t\t\t\t\tif (start == 0)\n\t\t\t\t\t\treturn { position, targetView, target }; // indicate the buffer was re-allocated\n\t\t\t\t} else\n\t\t\t\t\tpack(value);\n\t\t\t\treturn position;\n\t\t\t}, this);\n\t\t\tif (newPosition === 0) // bail and go to a msgpack object\n\t\t\t\treturn writeObject(object, true);\n\t\t\tposition = newPosition;\n\t\t}\n\t}\n\tuseBuffer(buffer) {\n\t\t// this means we are finished using our own buffer and we can write over it safely\n\t\ttarget = buffer\n\t\ttargetView = new DataView(target.buffer, target.byteOffset, target.byteLength)\n\t\tposition = 0\n\t}\n\tclearSharedData() {\n\t\tif (this.structures)\n\t\t\tthis.structures = []\n\t\tif (this.typedStructs)\n\t\t\tthis.typedStructs = []\n\t}\n}\n\nfunction copyBinary(source, target, targetOffset, offset, endOffset) {\n\twhile (offset < endOffset) {\n\t\ttarget[targetOffset++] = source[offset++]\n\t}\n}\n\nextensionClasses = [ Date, Set, Error, RegExp, ArrayBuffer, Object.getPrototypeOf(Uint8Array.prototype).constructor /*TypedArray*/, C1Type ]\nextensions = [{\n\tpack(date, allocateForWrite, pack) {\n\t\tlet seconds = date.getTime() / 1000\n\t\tif ((this.useTimestamp32 || date.getMilliseconds() === 0) && seconds >= 0 && seconds < 0x100000000) {\n\t\t\t// Timestamp 32\n\t\t\tlet { target, targetView, position} = allocateForWrite(6)\n\t\t\ttarget[position++] = 0xd6\n\t\t\ttarget[position++] = 0xff\n\t\t\ttargetView.setUint32(position, seconds)\n\t\t} else if (seconds > 0 && seconds < 0x100000000) {\n\t\t\t// Timestamp 64\n\t\t\tlet { target, targetView, position} = allocateForWrite(10)\n\t\t\ttarget[position++] = 0xd7\n\t\t\ttarget[position++] = 0xff\n\t\t\ttargetView.setUint32(position, date.getMilliseconds() * 4000000 + ((seconds / 1000 / 0x100000000) >> 0))\n\t\t\ttargetView.setUint32(position + 4, seconds)\n\t\t} else if (isNaN(seconds)) {\n\t\t\tif (this.onInvalidDate) {\n\t\t\t\tallocateForWrite(0)\n\t\t\t\treturn pack(this.onInvalidDate())\n\t\t\t}\n\t\t\t// Intentionally invalid timestamp\n\t\t\tlet { target, targetView, position} = allocateForWrite(3)\n\t\t\ttarget[position++] = 0xd4\n\t\t\ttarget[position++] = 0xff\n\t\t\ttarget[position++] = 0xff\n\t\t} else {\n\t\t\t// Timestamp 96\n\t\t\tlet { target, targetView, position} = allocateForWrite(15)\n\t\t\ttarget[position++] = 0xc7\n\t\t\ttarget[position++] = 12\n\t\t\ttarget[position++] = 0xff\n\t\t\ttargetView.setUint32(position, date.getMilliseconds() * 1000000)\n\t\t\ttargetView.setBigInt64(position + 4, BigInt(Math.floor(seconds)))\n\t\t}\n\t}\n}, {\n\tpack(set, allocateForWrite, pack) {\n\t\tlet array = Array.from(set)\n\t\tlet { target, position} = allocateForWrite(this.moreTypes ? 3 : 0)\n\t\tif (this.moreTypes) {\n\t\t\ttarget[position++] = 0xd4\n\t\t\ttarget[position++] = 0x73 // 's' for Set\n\t\t\ttarget[position++] = 0\n\t\t}\n\t\tpack(array)\n\t}\n}, {\n\tpack(error, allocateForWrite, pack) {\n\t\tlet { target, position} = allocateForWrite(this.moreTypes ? 3 : 0)\n\t\tif (this.moreTypes) {\n\t\t\ttarget[position++] = 0xd4\n\t\t\ttarget[position++] = 0x65 // 'e' for error\n\t\t\ttarget[position++] = 0\n\t\t}\n\t\tpack([ error.name, error.message ])\n\t}\n}, {\n\tpack(regex, allocateForWrite, pack) {\n\t\tlet { target, position} = allocateForWrite(this.moreTypes ? 3 : 0)\n\t\tif (this.moreTypes) {\n\t\t\ttarget[position++] = 0xd4\n\t\t\ttarget[position++] = 0x78 // 'x' for regeXp\n\t\t\ttarget[position++] = 0\n\t\t}\n\t\tpack([ regex.source, regex.flags ])\n\t}\n}, {\n\tpack(arrayBuffer, allocateForWrite) {\n\t\tif (this.moreTypes)\n\t\t\twriteExtBuffer(arrayBuffer, 0x10, allocateForWrite)\n\t\telse\n\t\t\twriteBuffer(hasNodeBuffer ? Buffer.from(arrayBuffer) : new Uint8Array(arrayBuffer), allocateForWrite)\n\t}\n}, {\n\tpack(typedArray, allocateForWrite) {\n\t\tlet constructor = typedArray.constructor\n\t\tif (constructor !== ByteArray && this.moreTypes)\n\t\t\twriteExtBuffer(typedArray, typedArrays.indexOf(constructor.name), allocateForWrite)\n\t\telse\n\t\t\twriteBuffer(typedArray, allocateForWrite)\n\t}\n}, {\n\tpack(c1, allocateForWrite) { // specific 0xC1 object\n\t\tlet { target, position} = allocateForWrite(1)\n\t\ttarget[position] = 0xc1\n\t}\n}]\n\nfunction writeExtBuffer(typedArray, type, allocateForWrite, encode) {\n\tlet length = typedArray.byteLength\n\tif (length + 1 < 0x100) {\n\t\tvar { target, position } = allocateForWrite(4 + length)\n\t\ttarget[position++] = 0xc7\n\t\ttarget[position++] = length + 1\n\t} else if (length + 1 < 0x10000) {\n\t\tvar { target, position } = allocateForWrite(5 + length)\n\t\ttarget[position++] = 0xc8\n\t\ttarget[position++] = (length + 1) >> 8\n\t\ttarget[position++] = (length + 1) & 0xff\n\t} else {\n\t\tvar { target, position, targetView } = allocateForWrite(7 + length)\n\t\ttarget[position++] = 0xc9\n\t\ttargetView.setUint32(position, length + 1) // plus one for the type byte\n\t\tposition += 4\n\t}\n\ttarget[position++] = 0x74 // \"t\" for typed array\n\ttarget[position++] = type\n\ttarget.set(new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength), position)\n}\nfunction writeBuffer(buffer, allocateForWrite) {\n\tlet length = buffer.byteLength\n\tvar target, position\n\tif (length < 0x100) {\n\t\tvar { target, position } = allocateForWrite(length + 2)\n\t\ttarget[position++] = 0xc4\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\tvar { target, position } = allocateForWrite(length + 3)\n\t\ttarget[position++] = 0xc5\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\tvar { target, position, targetView } = allocateForWrite(length + 5)\n\t\ttarget[position++] = 0xc6\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n\ttarget.set(buffer, position)\n}\n\nfunction writeExtensionData(result, target, position, type) {\n\tlet length = result.length\n\tswitch (length) {\n\t\tcase 1:\n\t\t\ttarget[position++] = 0xd4\n\t\t\tbreak\n\t\tcase 2:\n\t\t\ttarget[position++] = 0xd5\n\t\t\tbreak\n\t\tcase 4:\n\t\t\ttarget[position++] = 0xd6\n\t\t\tbreak\n\t\tcase 8:\n\t\t\ttarget[position++] = 0xd7\n\t\t\tbreak\n\t\tcase 16:\n\t\t\ttarget[position++] = 0xd8\n\t\t\tbreak\n\t\tdefault:\n\t\t\tif (length < 0x100) {\n\t\t\t\ttarget[position++] = 0xc7\n\t\t\t\ttarget[position++] = length\n\t\t\t} else if (length < 0x10000) {\n\t\t\t\ttarget[position++] = 0xc8\n\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t} else {\n\t\t\t\ttarget[position++] = 0xc9\n\t\t\t\ttarget[position++] = length >> 24\n\t\t\t\ttarget[position++] = (length >> 16) & 0xff\n\t\t\t\ttarget[position++] = (length >> 8) & 0xff\n\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t}\n\t}\n\ttarget[position++] = type\n\ttarget.set(result, position)\n\tposition += length\n\treturn position\n}\n\nfunction insertIds(serialized, idsToInsert) {\n\t// insert the ids that need to be referenced for structured clones\n\tlet nextId\n\tlet distanceToMove = idsToInsert.length * 6\n\tlet lastEnd = serialized.length - distanceToMove\n\twhile (nextId = idsToInsert.pop()) {\n\t\tlet offset = nextId.offset\n\t\tlet id = nextId.id\n\t\tserialized.copyWithin(offset + distanceToMove, offset, lastEnd)\n\t\tdistanceToMove -= 6\n\t\tlet position = offset + distanceToMove\n\t\tserialized[position++] = 0xd6\n\t\tserialized[position++] = 0x69 // 'i'\n\t\tserialized[position++] = id >> 24\n\t\tserialized[position++] = (id >> 16) & 0xff\n\t\tserialized[position++] = (id >> 8) & 0xff\n\t\tserialized[position++] = id & 0xff\n\t\tlastEnd = offset\n\t}\n\treturn serialized\n}\n\nfunction writeBundles(start, pack, incrementPosition) {\n\tif (bundledStrings.length > 0) {\n\t\ttargetView.setUint32(bundledStrings.position + start, position + incrementPosition - bundledStrings.position - start)\n\t\tbundledStrings.stringsPosition = position - start;\n\t\tlet writeStrings = bundledStrings\n\t\tbundledStrings = null\n\t\tpack(writeStrings[0])\n\t\tpack(writeStrings[1])\n\t}\n}\n\nexport function addExtension(extension) {\n\tif (extension.Class) {\n\t\tif (!extension.pack && !extension.write)\n\t\t\tthrow new Error('Extension has no pack or write function')\n\t\tif (extension.pack && !extension.type)\n\t\t\tthrow new Error('Extension has no type (numeric code to identify the extension)')\n\t\textensionClasses.unshift(extension.Class)\n\t\textensions.unshift(extension)\n\t}\n\tunpackAddExtension(extension)\n}\nfunction prepareStructures(structures, packr) {\n\tstructures.isCompatible = (existingStructures) => {\n\t\tlet compatible = !existingStructures || ((packr.lastNamedStructuresLength || 0) === existingStructures.length)\n\t\tif (!compatible) // we want to merge these existing structures immediately since we already have it and we are in the right transaction\n\t\t\tpackr._mergeStructures(existingStructures);\n\t\treturn compatible;\n\t}\n\treturn structures\n}\nexport function setWriteStructSlots(writeSlots, makeStructures) {\n\twriteStructSlots = writeSlots;\n\tprepareStructures = makeStructures;\n}\n\nlet defaultPackr = new Packr({ useRecords: false })\nexport const pack = defaultPackr.pack\nexport const encode = defaultPackr.pack\nexport const Encoder = Packr\nexport { FLOAT32_OPTIONS } from './unpack.js'\nimport { FLOAT32_OPTIONS } from './unpack.js'\nexport const { NEVER, ALWAYS, DECIMAL_ROUND, DECIMAL_FIT } = FLOAT32_OPTIONS\nexport const REUSE_BUFFER_MODE = 512\nexport const RESET_BUFFER_MODE = 1024\n","import { Packr } from './pack.js'\nimport { Unpackr } from './unpack.js'\n\n/**\n * Given an Iterable first argument, returns an Iterable where each value is packed as a Buffer\n * If the argument is only Async Iterable, the return value will be an Async Iterable.\n * @param {Iterable|Iterator|AsyncIterable|AsyncIterator} objectIterator - iterable source, like a Readable object stream, an array, Set, or custom object\n * @param {options} [options] - msgpackr pack options\n * @returns {IterableIterator|Promise.<AsyncIterableIterator>}\n */\nexport function packIter (objectIterator, options = {}) {\n  if (!objectIterator || typeof objectIterator !== 'object') {\n    throw new Error('first argument must be an Iterable, Async Iterable, or a Promise for an Async Iterable')\n  } else if (typeof objectIterator[Symbol.iterator] === 'function') {\n    return packIterSync(objectIterator, options)\n  } else if (typeof objectIterator.then === 'function' || typeof objectIterator[Symbol.asyncIterator] === 'function') {\n    return packIterAsync(objectIterator, options)\n  } else {\n    throw new Error('first argument must be an Iterable, Async Iterable, Iterator, Async Iterator, or a Promise')\n  }\n}\n\nfunction * packIterSync (objectIterator, options) {\n  const packr = new Packr(options)\n  for (const value of objectIterator) {\n    yield packr.pack(value)\n  }\n}\n\nasync function * packIterAsync (objectIterator, options) {\n  const packr = new Packr(options)\n  for await (const value of objectIterator) {\n    yield packr.pack(value)\n  }\n}\n\n/**\n * Given an Iterable/Iterator input which yields buffers, returns an IterableIterator which yields sync decoded objects\n * Or, given an Async Iterable/Iterator which yields promises resolving in buffers, returns an AsyncIterableIterator.\n * @param {Iterable|Iterator|AsyncIterable|AsyncIterableIterator} bufferIterator\n * @param {object} [options] - unpackr options\n * @returns {IterableIterator|Promise.<AsyncIterableIterator}\n */\nexport function unpackIter (bufferIterator, options = {}) {\n  if (!bufferIterator || typeof bufferIterator !== 'object') {\n    throw new Error('first argument must be an Iterable, Async Iterable, Iterator, Async Iterator, or a promise')\n  }\n\n  const unpackr = new Unpackr(options)\n  let incomplete\n  const parser = (chunk) => {\n    let yields\n    // if there's incomplete data from previous chunk, concatinate and try again\n    if (incomplete) {\n      chunk = Buffer.concat([incomplete, chunk])\n      incomplete = undefined\n    }\n\n    try {\n      yields = unpackr.unpackMultiple(chunk)\n    } catch (err) {\n      if (err.incomplete) {\n        incomplete = chunk.slice(err.lastPosition)\n        yields = err.values\n      } else {\n        throw err\n      }\n    }\n    return yields\n  }\n\n  if (typeof bufferIterator[Symbol.iterator] === 'function') {\n    return (function * iter () {\n      for (const value of bufferIterator) {\n        yield * parser(value)\n      }\n    })()\n  } else if (typeof bufferIterator[Symbol.asyncIterator] === 'function') {\n    return (async function * iter () {\n      for await (const value of bufferIterator) {\n        yield * parser(value)\n      }\n    })()\n  }\n}\nexport const decodeIter = unpackIter\nexport const encodeIter = packIter"],"names":["Math","floor","checkedRead","options","currentUnpackr","trusted","sequentialMode","sharedLength","currentStructures","length","result","randomAccessStructure","src","position","readStruct","srcEnd","lazy","toJSON","read","bundledStrings","postBundlePosition","restoreStructures","referenceMap","Error","JSON","stringify","slice","error","clearSource","RangeError","message","startsWith","incomplete","id","token","array","Array","i","freezeData","Object","freeze","mapsAsObjects","object","key","readKey","map","Map","set","structure","getStructures","loadStructures","createStructureReader","srcStringEnd","srcString","srcStringStart","string","shortStringInJS","longStringInJS","readFixedString","value","position1","position0","C1","readBin","dataView","getUint16","getUint32","readExt","getFloat32","useFloat32","multiplier","mult10","getFloat64","int64AsNumber","getBigUint64","getInt8","getInt16","getInt32","getBigInt64","recordDefinition","extension","currentExtensions","noBuffer","subarray","readString8","readString16","readString32","readArray","readMap","firstId","readObject","count","inlineObjectReadThreshold","Function","validName","test","join","highByte","createSecondByteReader","l","loadedStructures","saveState","_mergeStructures","readStringJS","decoder","decode","end","units","byte1","push","byte2","byte3","byte4","unit","fromCharCode","apply","String","start","bytes","byte","a","b","c","d","e","f","g","h","j","k","m","n","o","readOnlyJSString","copyBuffers","Uint8Array","prototype","call","type","readPosition","toString","chunk","entry","keyCache","checkPosition","callback","savedSrcEnd","savedPosition","savedSrcStringStart","savedSrcStringEnd","savedSrcString","savedReferenceMap","savedBundledStrings","savedSrc","savedStructures","savedStructuresContents","savedPackr","savedSequentialMode","splice","DataView","buffer","byteOffset","byteLength","addExtension","unpack","writeExtBuffer","typedArray","allocateForWrite","target","targetView","setUint32","writeBuffer","writeExtensionData","insertIds","serialized","idsToInsert","nextId","distanceToMove","lastEnd","pop","offset","copyWithin","writeBundles","pack","incrementPosition","stringsPosition","writeStrings","Class","write","extensionClasses","unshift","extensions","unpackAddExtension","prepareStructures","structures","packr","isCompatible","existingStructures","compatible","lastNamedStructuresLength","packIterSync","objectIterator","Packr","packIterAsync","TextDecoder","defaultOptions","useRecords","C1Type","name","Unpackr","constructor","sequential","maxSharedStructures","uninitialized","assign","source","unpackMultiple","forEach","values","lastPosition","size","defaultUnpackr","isFrozen","isShared","existing","read0","property","firstByte","existingStructure","data","globalThis","refEntry","targetProperties","used","get","Set","typedArrays","typeCode","typedArrayName","RegExp","TEMP_BUNDLE","dataSize","dataPosition","Date","FLOAT32_OPTIONS","NEVER","ALWAYS","DECIMAL_ROUND","DECIMAL_FIT","textEncoder","f32Array","Float32Array","u8Array","TextEncoder","hasNodeBuffer","Buffer","ByteArrayAllocate","allocUnsafeSlow","ByteArray","MAX_BUFFER_SIZE","keysTarget","safeEnd","writeStructSlots","RECORD_SYMBOL","Symbol","hasSharedUpdate","encodeUtf8","utf8Write","encodeInto","written","isSequential","hasSharedStructures","saveStructures","structuredClone","moreTypes","maxOwnStructures","useTwoByteRecords","sharedLimitId","maxStructureId","recordIdsToRemove","transitionsCount","serializationsSinceTransitionRebuild","encode","encodeOptions","bundleStrings","transitions","create","keys","nextTransition","transition","writeStruct","lastBundle","sort","insertionPoint","previous","makeRoom","REUSE_BUFFER_MODE","returnBuffer","newSharedData","RESET_BUFFER_MODE","strLength","extStart","maxBytes","setUint16","twoByte","headerSize","c1","c2","strPosition","charCodeAt","setInt16","setInt32","setFloat32","xShifted","setFloat64","referee","writeObject","entryValue","extensionClass","currentTarget","currentTargetView","currentPosition","hasOwnProperty","BigInt","setBigInt64","setBigUint64","largeBigIntToFloat","encodeUndefinedAsNil","writeFunction","variableMapSize","safePrototype","objectOffset","progressiveRecords","wroteKeys","lastTransition","newTransitions","newRecord","insertNewRecord","recordId","__keys__","min","round","max","newSize","newBuffer","copy","shouldShareStructure","nextOwnId","shift","insertionOffset","mainTarget","mainPosition","mainSafeEnd","mainStart","keysPosition","newEnd","insertionPosition","newPosition","useBuffer","clearSharedData","typedStructs","ArrayBuffer","getPrototypeOf","date","seconds","getTime","useTimestamp32","getMilliseconds","isNaN","onInvalidDate","from","regex","flags","arrayBuffer","indexOf","defaultPackr","bufferIterator","unpackr","parser","yields","concat","err","iterator","asyncIterator","then","float32Number"],"mappings":"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"}