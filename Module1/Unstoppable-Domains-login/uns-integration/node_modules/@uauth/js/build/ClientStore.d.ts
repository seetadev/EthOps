import { AuthorizeRequest, LogoutRequest } from './api';
import type Client from './Client';
import { Authorization, AuthorizationOptions } from './types';
declare class ClientStore {
    client: Client;
    constructor(client: Client);
    private get;
    private set;
    setAuthorizeRequest(request: AuthorizeRequest): Promise<void>;
    getAuthorizeRequest(): Promise<AuthorizeRequest>;
    setLogoutRequest(request: LogoutRequest): Promise<void>;
    getLogoutRequest(): Promise<LogoutRequest>;
    setVerifier(challenge: string, verifier: string): Promise<void>;
    getVerifier(challenge: string): Promise<string>;
    setOpenIdConfiguration(username: string, openidConfiguration: any, timeout: number): Promise<void>;
    getOpenIdConfiguration(username: string): Promise<any>;
    setAuthorization(authorization: Authorization): Promise<void>;
    deleteAuthorization(options: AuthorizationOptions): Promise<boolean>;
    getAuthorization(options: AuthorizationOptions): Promise<Authorization>;
    private _getAuthorizationKey;
    private _getUsername;
}
export default ClientStore;
